name: Build All

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: "Build all"
    runs-on: ubuntu-18.04
    steps:
      ###########################
      #        Setup env        #
      ###########################
      - uses: actions/checkout@v2
      - run: cat .github/workflows/.env | sed 's/=\" *$/<<EOD/g' | sed 's/^\"/EOD/g' | grep '^[^# ]' >> $GITHUB_ENV
      - id: latest
        run: |
          echo "::set-output name=tag::`git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='v:refname' --tags https://github.com/${{ github.repository }} 'v*.*' \
              | tail -n 1 \
              | cut -d '/' -f 3 \
              | cut -c 2-`"

      ###########################
      #       Docker meta       #
      ###########################
      - uses: crazy-max/ghaction-docker-meta@v1
        id: base_docker
        with:
          images: ${{ env.BASE_IMAGE }}
      - uses: crazy-max/ghaction-docker-meta@v1
        id: hub_docker
        with:
          images: ${{ env.HUB_IMAGE }}

      ###########################
      #          Setup          #
      ###########################
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ steps.latest.outputs.tag }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.latest.outputs.tag }}-
            ${{ runner.os }}-

      ###########################
      #     Build base image    #
      ###########################
      - name: Build (Base)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .github/workflows/dockerfiles/base.Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true
          labels: ${{ steps.base_docker.outputs.labels }}
          tags: |
            {{ env.BASE_IMAGE }}:${{ steps.latest.outputs.tag }}
            {{ env.BASE_IMAGE }}:latest

      ###########################
      #     Build hub image     #
      ###########################
      - name: Build (Hub)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .github/workflows/dockerfiles/hub.Dockerfile
          build-args: baseImage=${{ env.BASE_IMAGE }}:${{ steps.latest.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true
          labels: ${{ steps.hub_docker.outputs.labels }}
          tags: |
            {{ env.HUB_IMAGE }}:${{ steps.latest.outputs.tag }}
            {{ env.HUB_IMAGE }}:latest

      ###########################
      #     Build hub image     #
      ###########################
      - name: Push images
        run: |
          # Sometimes the image push fails.
          #   >> failed commit on ref "layer-sha256:...": no response
          #   See https://github.com/docker/build-push-action/blob/master/TROUBLESHOOTING.md
          docker push ${{ env.BASE_IMAGE }} \
            || docker push ${{ env.BASE_IMAGE }} \
            || docker push ${{ env.BASE_IMAGE }}
          docker push ${{ env.HUB_IMAGE }} \
            || docker push ${{ env.HUB_IMAGE }} \
            || docker push ${{ env.HUB_IMAGE }}

      ###########################
      # Build base editor image #
      ###########################
      - name: "Dispatch 'Build Editor' workflow"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Build Editor
          token: ${{ secrets.GH_WORKFLOW_TOKEN }}
          inputs: '{ "module": "base", "repoTag": "${{ steps.latest.outputs.tag }}" }'
